from unittest import TestCase
import ArtPy

class VLCStatus(TestCase):
    def test_vlc_enabled(self):
        data = ArtPy.decode(
            bytes([0x41, 0x72, 0x74, 0x2d, 0x4e, 0x65, 0x74, 0x00, 0x00, 0x20, 0x00, 0x0e, 0x06, 0x00])
        )

        self.assertTrue(data['data']['vlc'])

    def test_vlc_disabled(self):
        data = ArtPy.decode(
            bytes([0x41, 0x72, 0x74, 0x2d, 0x4e, 0x65, 0x74, 0x00, 0x00, 0x20, 0x00, 0x0e, 0x16, 0x00])
        )

        self.assertFalse(data['data']['vlc'])

class DiagStatus(TestCase):
    def test_diag_enabled(self):
        data = ArtPy.decode(
            bytes([0x41, 0x72, 0x74, 0x2d, 0x4e, 0x65, 0x74, 0x00, 0x00, 0x20, 0x00, 0x0e, 0x06, 0x00])
        )

        self.assertTrue(data['data']['diag']['enable'])

    def test_diag_disabled(self):
        data = ArtPy.decode(
            bytes([0x41, 0x72, 0x74, 0x2d, 0x4e, 0x65, 0x74, 0x00, 0x00, 0x20, 0x00, 0x0e, 0x02, 0x00])
        )

        self.assertFalse(data['data']['diag']['enable'])


    def test_diag_unicast(self):
        data = ArtPy.decode(
            bytes([0x41, 0x72, 0x74, 0x2d, 0x4e, 0x65, 0x74, 0x00, 0x00, 0x20, 0x00, 0x0e, 0x0E, 0x00])
        )

        self.assertTrue(data['data']['diag']['unicast'])

    def test_diag_broadcast(self):
        data = ArtPy.decode(
            bytes([0x41, 0x72, 0x74, 0x2d, 0x4e, 0x65, 0x74, 0x00, 0x00, 0x20, 0x00, 0x0e, 0x06, 0x00])
        )

        self.assertFalse(data['data']['diag']['unicast'])

